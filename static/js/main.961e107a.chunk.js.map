{"version":3,"sources":["components/Profile/Stats.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/Profile/Profile.module.css","components/Transaction/TransactionHistory.module.css","components/Profile/Stats.js","components/default-profile.jpg","components/Profile/Profile.js","components/Statistics/StatisticsList.js","components/Statistics/randomColor.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/Transaction/TransactionItem.js","components/Transaction/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Stats","followers","views","likes","className","s","stats","statsItem","label","quantity","Profile","name","tag","location","avatar","defaultProfilePhoto","profile","description","src","alt","StatisticsList","statList","map","id","percentage","statListItem","style","backgroundColor","Math","floor","random","toString","Statistics","title","statistics","FriendListItem","isOnlineClass","isOnline","online","offline","item","width","FriendList","friends","friendList","TransactionItem","type","amount","currency","TransactionHistory","items","transactionHistory","App","userData","statisticalData","friendsData","transactionData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.961e107a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Stats_stats__CWVsL\",\"statsItem\":\"Stats_statsItem__1rWX4\",\"label\":\"Stats_label__1ioVY\",\"quantity\":\"Stats_quantity__2Wptq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__20maU\",\"title\":\"Statistics_title__3EtLT\",\"statList\":\"Statistics_statList__Scjst\",\"statListItem\":\"Statistics_statListItem__3ax0t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__2LG0s\",\"item\":\"FriendList_item__17Rl1\",\"status\":\"FriendList_status__3Jdbs\",\"online\":\"FriendList_online__c1TZs FriendList_status__3Jdbs\",\"offline\":\"FriendList_offline__T_YVS FriendList_status__3Jdbs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1aQrh\",\"description\":\"Profile_description__29Trd\",\"avatar\":\"Profile_avatar__3zlr_\",\"name\":\"Profile_name__30j-O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__2daxM\"};","import s from './Stats.module.css';\n\nconst Stats = ({ followers, views, likes }) => {\n  return (\n    <ul className={s.stats}>\n      <li className={s.statsItem}>\n        <span className={s.label}>Followers</span>\n        <span className={s.quantity}> {followers}</span>\n      </li>\n      <li className={s.statsItem}>\n        <span className={s.label}>Views</span>\n        <span className={s.quantity}> {views}</span>\n      </li>\n      <li className={s.statsItem}>\n        <span className={s.label}>Likes</span>\n        <span className={s.quantity}> {likes}</span>\n      </li>\n    </ul>\n  );\n};\n\nexport default Stats;\n","export default __webpack_public_path__ + \"static/media/default-profile.90dc751e.jpg\";","import PropTypes from 'prop-types';\nimport Stats from './Stats';\nimport defaultProfilePhoto from '../default-profile.jpg';\nimport s from './Profile.module.css';\n\nconst Profile = ({\n  name,\n  tag,\n  location = 'Planet Earth',\n  avatar = defaultProfilePhoto,\n  stats,\n}) => {\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img src={avatar} alt={name} className={s.avatar} />\n        <p className={s.name}>{name}</p>\n        <p className={s.tag}>@{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n      <Stats stats={stats} />\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string,\n  avatar: PropTypes.string,\n  stats: PropTypes.objectOf(PropTypes.number.isRequired),\n};\n\nexport default Profile;\n","import s from './Statistics.module.css';\nimport getRandomColor from './randomColor';\n\nconst StatisticsList = ({ stats }) => {\n  return (\n    <ul className={s.statList}>\n      {stats.map(({id, label, percentage}) => (\n        <li\n          className={s.statListItem}\n          key={id}\n          style={{ backgroundColor: getRandomColor() }}\n        >\n          <span className={s.label}>{label}</span>\n          <span className={s.percentage}>{percentage}%</span>\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default StatisticsList;\n","export default function getRandomColor() {\n  return '#' + Math.floor(Math.random() * 16777215).toString(16);\n}\n","import PropTypes from 'prop-types';\nimport StatisticsList from './StatisticsList';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <section className={s.statistics}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      <StatisticsList stats={stats} />\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport defaultProfilePhoto from '../default-profile.jpg';\nimport s from './FriendList.module.css';\n\nconst FriendListItem = ({\n  id,\n  avatar = defaultProfilePhoto,\n  name,\n  isOnline,\n}) => {\n  const isOnlineClass = isOnline ? s.online : s.offline;\n  return (\n    <li key={id} className={s.item}>\n      <span className={isOnlineClass}></span>\n      <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={s.name}>{name}</p>\n    </li>\n  );\n};\n\nFriendListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n  id: PropTypes.number,\n};\n\nexport default FriendListItem;\n","import FriendListItem from './FriendListItem';\nimport s from './FriendList.module.css';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className={s.friendList}>\n      {friends.map(({ id, avatar, name, isOnline }) => (\n        <FriendListItem\n          key={id}\n          avatar={avatar}\n          name={name}\n          isOnline={isOnline}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default FriendList;\n","const TransactionItem = ({ type, amount, currency }) => {\n  return (\n    <tr>\n      <td>{type}</td>\n      <td>{amount}</td>\n      <td>{currency}</td>\n    </tr>\n  );\n};\n\nexport default TransactionItem;\n","import PropTypes from 'prop-types';\nimport TransactionItem from './TransactionItem';\nimport s from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={s.transactionHistory}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(({type, amount, currency, id}) => (\n          <TransactionItem\n            type={type}\n            amount={amount}\n            currency={currency}\n            key={id}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionHistory;\n","import React from 'react';\n\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/Transaction/TransactionHistory';\n\nimport userData from './data/user.json';\nimport statisticalData from './data/statistical-data.json';\nimport friendsData from './data/friends.json';\nimport transactionData from './data/transactions.json';\n\nfunction App() {\n  return (\n    <>\n      <Profile\n        name={userData.name}\n        tag={userData.tag}\n        location={userData.location}\n        avatar={userData.avatar}\n        stats={userData.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n      <FriendList friends={friendsData} />,\n      <TransactionHistory items={transactionData} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}