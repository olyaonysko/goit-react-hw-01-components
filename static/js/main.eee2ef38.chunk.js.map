{"version":3,"sources":["components/Profile/Stats.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/Profile/Profile.module.css","components/Transaction/TransactionHistory.module.css","components/Profile/Stats.js","components/default-profile.jpg","components/Profile/Profile.js","components/Statistics/StatisticsList.js","components/Statistics/randomColor.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/Transaction/TransactionItem.js","components/Transaction/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Stats","stats","followers","views","likes","className","s","statsItem","label","quantity","Profile","name","tag","location","avatar","defaultProfilePhoto","profile","description","src","alt","StatisticsList","statList","map","item","statListItem","style","backgroundColor","Math","floor","random","toString","percentage","id","Statistics","title","statistics","FriendListItem","isOnlineClass","isOnline","online","offline","width","FriendList","friends","friendList","TransactionItem","type","amount","currency","TransactionHistory","items","transactionHistory","App","userData","statisticalData","friendsData","transactionData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eee2ef38.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Stats_stats__CWVsL\",\"statsItem\":\"Stats_statsItem__1rWX4\",\"label\":\"Stats_label__1ioVY\",\"quantity\":\"Stats_quantity__2Wptq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__20maU\",\"title\":\"Statistics_title__3EtLT\",\"statList\":\"Statistics_statList__Scjst\",\"statListItem\":\"Statistics_statListItem__3ax0t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__2LG0s\",\"item\":\"FriendList_item__17Rl1\",\"status\":\"FriendList_status__3Jdbs\",\"online\":\"FriendList_online__c1TZs FriendList_status__3Jdbs\",\"offline\":\"FriendList_offline__T_YVS FriendList_status__3Jdbs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1aQrh\",\"description\":\"Profile_description__29Trd\",\"avatar\":\"Profile_avatar__3zlr_\",\"name\":\"Profile_name__30j-O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__2daxM\"};","// import React from 'react'\r\nimport s from './Stats.module.css'\r\n\r\nconst Stats = ({ stats }) => {\r\n    const { followers, views, likes } = stats;\r\n    return (\r\n        <ul className={s.stats}>\r\n            <li className={s.statsItem}>\r\n                <span className={s.label}>Followers</span>\r\n                <span className={s.quantity}> {followers}</span>\r\n            </li>\r\n            <li className={s.statsItem}>\r\n                <span className={s.label}>Views</span>\r\n                <span className={s.quantity}> {views}</span>\r\n            </li>\r\n            <li className={s.statsItem}>\r\n                <span className={s.label}>Likes</span>\r\n                <span className={s.quantity}> {likes}</span>\r\n            </li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default Stats;","export default __webpack_public_path__ + \"static/media/default-profile.90dc751e.jpg\";","// import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Stats from './Stats'\r\nimport defaultProfilePhoto from '../default-profile.jpg'\r\nimport s from './Profile.module.css'\r\n\r\nconst Profile = ({name, tag, location = 'Planet Earth', avatar = defaultProfilePhoto, stats}) => {\r\n    return (\r\n        <div className={s.profile}>\r\n            <div className={s.description}>\r\n                <img\r\n                    src={avatar}\r\n                    alt={name}\r\n                    className={s.avatar}\r\n                />\r\n                <p className={s.name}>{name}</p>\r\n                <p className={s.tag}>@{tag}</p>\r\n                <p className={s.location}>{location}</p>\r\n            </div>\r\n            <Stats stats={stats} />\r\n        </div>\r\n    );\r\n};\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    stats: PropTypes.objectOf(PropTypes.number.isRequired)\r\n};\r\n\r\nexport default Profile;","\r\n// import React from 'react'\r\nimport s from './Statistics.module.css'\r\nimport getRandomColor from './randomColor'\r\n\r\nconst StatisticsList = ({ stats }) => {\r\n    return (\r\n         <ul className={s.statList}>\r\n                {stats.map(item => (\r\n                    <li className={s.statListItem} key={item.id} style={{ backgroundColor: getRandomColor() }}>\r\n                        <span className={s.label}>{item.label}</span>\r\n                        <span className={s.percentage}>{item.percentage}%</span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n    )\r\n}\r\nexport default StatisticsList;","export default function getRandomColor() {\r\n     return '#' + Math.floor(Math.random() * 16777215).toString(16);\r\n}\r\n\r\n","// import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport StatisticsList from './StatisticsList'\r\nimport s from './Statistics.module.css'\r\n\r\nconst Statistics = ({title, stats}) => {\r\n    return (\r\n        <section className={s.statistics}>\r\n            {title && <h2 className={s.title}>{title}</h2>}\r\n            <StatisticsList stats={stats} />\r\n        </section>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            label: PropTypes.string.isRequired, \r\n            percentage: PropTypes.number.isRequired\r\n        })\r\n    )\r\n}\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\nimport defaultProfilePhoto from '../default-profile.jpg'\r\nimport s from './FriendList.module.css'\r\n\r\nconst FriendListItem = ({ id, avatar = defaultProfilePhoto, name, isOnline }) => {\r\n  const isOnlineClass = isOnline ? s.online : s.offline;\r\n  return (\r\n      <li key={id} className={s.item} >\r\n          <span className={isOnlineClass}></span>\r\n          <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\r\n          <p className={s.name}>{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired, \r\n  id: PropTypes.number\r\n}\r\n\r\nexport default FriendListItem;\r\n","import FriendListItem from './FriendListItem'\r\nimport PropTypes from 'prop-types';\r\nimport s from './FriendList.module.css'\r\n\r\nconst FriendList = ({friends}) => {\r\n    return (\r\n        <ul className={s.friendList}>\r\n            {friends.map(({id, avatar, name, isOnline}) => (\r\n                <FriendListItem\r\n                    key={id}\r\n                    avatar={avatar}\r\n                    name={name}\r\n                    isOnline={isOnline}\r\n                />\r\n        ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default FriendList;","// import React from 'react';\r\n\r\nconst TransactionItem = ({ id, type, amount, currency }) => {\r\n    return (\r\n          <tr key={id}>\r\n            <td>{type}</td>\r\n            <td>{amount}</td>\r\n            <td>{currency}</td>\r\n          </tr>\r\n    )\r\n}\r\n\r\nexport default TransactionItem;","// import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TransactionItem from './TransactionItem'\r\nimport s from './TransactionHistory.module.css'\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <table className={s.transactionHistory}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n              {items.map(item => (\r\n                  <TransactionItem type={item.type} amount={item.amount} currency={item.currency} key={item.id}/>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n    items: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            type: PropTypes.string.isRequired,\r\n            amount: PropTypes.string.isRequired,\r\n            currency: PropTypes.string.isRequired\r\n        })\r\n    )\r\n};\r\n\r\nexport default TransactionHistory;","import React from 'react'\n\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList'\nimport TransactionHistory from './components/Transaction/TransactionHistory' \n\nimport userData from './user.json'\nimport statisticalData from './statistical-data.json'\nimport friendsData from './friends.json'\nimport transactionData from './transactions.json'\n  \n\nfunction App() {\n  return (\n    <>\n  <Profile\n      name={userData.name}\n      tag={userData.tag}\n      location={userData.location}\n      avatar={userData.avatar}\n      stats={userData.stats}\n    />\n  <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n      <FriendList friends={friendsData} />, \n      <TransactionHistory items={transactionData} />\n\n      </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}